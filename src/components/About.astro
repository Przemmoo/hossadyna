---
import { getEntry } from 'astro:content';
import { marked } from 'marked';

const aboutData = await getEntry('settings', 'about');

// Funkcja do renderowania Markdown
const renderMarkdown = (content: string) => {
  return marked(content);
};
---

<section id="about" class="about section">
  <div class="container">
    <h2>{aboutData?.data.title}</h2>
    <div class="about-content">
      <div class="about-text">
        <p set:html={aboutData?.data.intro_paragraph_1 ? renderMarkdown(aboutData.data.intro_paragraph_1) : ''}>
        </p>
        
        <p set:html={aboutData?.data.intro_paragraph_2 ? renderMarkdown(aboutData.data.intro_paragraph_2) : ''}>
        </p>

        <div class="qualifications">
          <h3>{aboutData?.data.qualifications_title}</h3>
          <ul>
            {aboutData?.data.qualifications && aboutData.data.qualifications.map((qual: string) => (
              <li>{qual}</li>
            ))}
          </ul>
        </div>

        <div class="approach">
          <h3>{aboutData?.data.approach_title}</h3>
          <p set:html={aboutData?.data.approach_description ? renderMarkdown(aboutData.data.approach_description) : ''}>
          </p>
        </div>
      </div>
      
      <div class="about-image">
        <img 
          src={aboutData?.data.profile_image}
          alt={aboutData?.data.profile_image_alt}
          class="about-img"
        />
      </div>
    </div>
  </div>
</section>

<style>
  h2 {
    text-align: center;
  }
  
  .about {
    background-color: var(--color-white);
  }

  .about-content {
    display: grid;
    grid-template-columns: 2fr 1fr;
    gap: 4rem;
    align-items: start;
  }

  .about-text {
    font-size: 1.1rem;
    line-height: 1.7;
  }

  .about-text p {
    margin-bottom: 1.5rem;
  }

  .qualifications,
  .approach {
    margin-top: 2rem;
    padding: 1.5rem;
    background-color: var(--color-off-white);
    border-radius: 10px;
    border-left: 4px solid var(--color-dusty-pink);
  }

  .qualifications h3,
  .approach h3 {
    color: var(--color-dusty-pink);
    margin-bottom: 1rem;
    font-size: 1.3rem;
  }

  .qualifications ul {
    list-style: none;
    padding: 0;
  }

  .qualifications li {
    padding: 0.5rem 0;
    position: relative;
    padding-left: 1.5rem;
  }

  .qualifications li::before {
    content: "âœ“";
    position: absolute;
    left: 0;
    color: var(--color-sage-green);
    font-weight: bold;
  }

  .about-image {
    position: relative;
    text-align: center;
  }

  .about-img {
    width: 100%;
    max-width: 350px;
    height: auto;
    border-radius: 15px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
  }

  .experience-badge {
    position: absolute;
    bottom: -10px;
    right: 10px;
    background-color: var(--color-dusty-pink);
    color: var(--color-white);
    padding: 1rem;
    border-radius: 10px;
    text-align: center;
    box-shadow: 0 5px 20px rgba(0, 0, 0, 0.2);
  }

  .experience-years {
    display: block;
    font-size: 2rem;
    font-weight: bold;
    font-family: var(--font-heading);
  }

  .experience-text {
    font-size: 0.9rem;
    font-weight: 600;
  }

  /* Mobile Styles */
  @media (max-width: 768px) {
    .about-content {
      grid-template-columns: 1fr;
      gap: 2rem;
    }

    .about-image {
      order: -1;
    }

    .about-text {
      font-size: 1rem;
      text-align: center;
    }


    .qualifications li{
      justify-self: center;
    }

    .qualifications,
    .approach {
      margin-top: 1.5rem;
      padding: 1rem;
    }

    .experience-badge {
      position: static;
      margin-top: 1rem;
      display: inline-block;
    }
  }
</style>
